openapi: 3.0.0
info:
  description: Swagger specification for syncmanager api
  version: 1.0.0
  title: Syncmanager API

servers:
  - url: "/api"
    description: "Base server URL"
paths:
  /syncdir:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
      operationId: "syncmanagerapi.client.api.create_syncdir"
      tags:
        - "File system"
      summary: "Creates directory for synchronization of files"
      description: ""
      responses:
        204:
          description: "Successfully created sync directory"
          content:
            application/json:
              schema:
                type: object
  /clientenv:
    post:
      operationId: "syncmanagerapi.client.api.add_client_env"
      tags:
      - "Client config"
      summary: "Adds environment descriptor for client side control of syncronization"
      description: ""
      responses:
        204:
          description: "Successfully added client environment entry"
  /git/repos:
    get:
      operationId: "syncmanagerapi.git.api.get_repos"
      tags:
      - "Git"
      summary: "Returns all associated Git repositories for all environments of the user"
      description: ""
      parameters:
      - name: clientenv
        in: query
        description: env descriptor of the synchronization client
        schema:
          type: string
        required: true
      - name: retention_years
        description: "time window in years which includes only repos that had an update in that time"
        in: query
        schema:
          type: integer
        required: false
      - name: full_info
        description: whether to provide full repo information.
        in: query
        schema:
          type: boolean
        required: false
      responses:
        200:
          description: "List of Git repositories"
    post:
      operationId: "syncmanagerapi.git.api.create_repo"
      tags:
      - "Git"
      summary: "Creates bare git repository"
      description: ""
      responses:
        204:
          description: "Successfully created git repository"
  /git/repos_by_clientenv:
    get:
      operationId: "syncmanagerapi.git.api.get_repos_by_clientenv"
      tags:
      - "Git"
      summary: "Returns all associated Git repositories for all environments of the user"
      description: ""
      parameters:
      - name: full_info
        description: whether to provide full repo information.
        in: query
        schema:
          type: boolean
        required: false
      responses:
        200:
          description: "List of Git repositories"
  /git/repos/{repo_id}:
    parameters:
      - name: repo_id
        in: path
        description: identifier for the server repository
        schema:
          type: string
        required: true
    delete:
      operationId: syncmanagerapi.git.api.delete_repo
      summary: "Deletes the server repository"
      description: ""
      responses:
        204:
          description: "server repo deleted"
    patch:
      operationId: syncmanagerapi.git.api.update_repo
      summary: "Refreshes repo data"
      responses:
        200:
          description: "server repo updated"
  /git/repos/{repo_id}/{client_env}:
    put:
      operationId: "syncmanagerapi.git.api.update_server_repo_and_clientrepo_association"
      tags:
      - "Git"
      summary: "Updates the server repository: file system location and also the association to its client environments"
      description: ""
      parameters:
      - name: repo_id
        in: path
        description: identifier for the server repository
        schema:
          type: string
        required: true
      - name: client_env
        in: path
        description: env descriptor of the synchronization environment
        schema:
          type: string
        required: true

      responses:
        200:
          description: "Returns updated server repo reference"
    delete:
      operationId: syncmanagerapi.git.api.delete_repo_assoc_for_clientenv
      tags:
      - "Git"
      summary: "Deletes the client reference of server repository"
      description: ""
      parameters:
        - name: repo_id
          in: path
          description: identifier for the server repository
          schema:
            type: string
          required: true
        - name: client_env
          in: path
          description: env descriptor of the synchronization environment
          schema:
            type: string
          required: true
      responses:
        204:
          description: "User git repo association deleted for the given environment"
  /git/clientrepos/{client_repo_id}:
    put:
      operationId: syncmanagerapi.git.api.update_client_repo
      tags:
      - "Git"
      summary: "Updates only the client repo = association of server repository with a client env"
      description: ""
      parameters:
        - name: client_repo_id
          in: path
          description: identifier for client repo
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: "Returns updated server repo reference"
  /admin/user:
    get:
      operationId: syncmanagerapi.admin.controller.get_standard_users
      tags:
        - "Admin interface"
      summary: "Return standard users for syncing files."
      responses:
        200:
          description: "List of standard users"
    post:
      operationId: syncmanagerapi.admin.controller.create_standard_user
      tags:
        - "Admin interface"
      summary: "Creates standard user syncing files."
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: "Successfully created user"
          content:
            application/json:
              schema:
                type: object
